package net.medsouz.omg.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

// Date: 9/11/2013 7:35:48 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

public class ModelM16 extends ModelBase
{
  //fields
    ModelRenderer Body;
    ModelRenderer TriggerGrip;
    ModelRenderer Grip;
    ModelRenderer ClipInsert;
    ModelRenderer Stock1;
    ModelRenderer Stock2;
    ModelRenderer Stock3;
    ModelRenderer Trigger;
    ModelRenderer SightMain;
    ModelRenderer Sight1;
    ModelRenderer Sight2;
    ModelRenderer Barrel;
    ModelRenderer Sight3;
    ModelRenderer[] parts;
  
  public ModelM16()
  {
    textureWidth = 64;
    textureHeight = 32;
    
      Body = new ModelRenderer(this, 0, 15);
      Body.addBox(-2F, 0F, 0F, 4, 6, 11);
      Body.setRotationPoint(0F, 0F, 0F);
      Body.setTextureSize(64, 32);
      Body.mirror = true;
      setRotation(Body, 0F, 0F, 0F);
      TriggerGrip = new ModelRenderer(this, 0, 0);
      TriggerGrip.addBox(-1.5F, 5F, 7F, 3, 6, 3);
      TriggerGrip.setRotationPoint(0F, 3F, 0F);
      TriggerGrip.setTextureSize(64, 32);
      TriggerGrip.mirror = true;
      setRotation(TriggerGrip, 0.3665191F, 0F, 0F);
      Grip = new ModelRenderer(this, 32, 0);
      Grip.addBox(-2F, 0.2F, -12F, 4, 4, 12);
      Grip.setRotationPoint(0F, 0F, 0F);
      Grip.setTextureSize(64, 32);
      Grip.mirror = true;
      setRotation(Grip, 0F, 0F, 0F);
      ClipInsert = new ModelRenderer(this, 0, 0);
      ClipInsert.addBox(-1.5F, 5F, 1F, 3, 2, 4);
      ClipInsert.setRotationPoint(0F, 0F, 0F);
      ClipInsert.setTextureSize(64, 32);
      ClipInsert.mirror = true;
      setRotation(ClipInsert, -0.1919862F, 0F, 0F);
      Stock1 = new ModelRenderer(this, 32, 0);
      Stock1.addBox(-1F, 0.2F, 11F, 2, 5, 4);
      Stock1.setRotationPoint(0F, 0F, 0F);
      Stock1.setTextureSize(64, 32);
      Stock1.mirror = true;
      setRotation(Stock1, 0F, 0F, 0F);
      Stock2 = new ModelRenderer(this, 32, 0);
      Stock2.addBox(-1F, 0.2F, 14F, 2, 6, 4);
      Stock2.setRotationPoint(0F, 0F, 1F);
      Stock2.setTextureSize(64, 32);
      Stock2.mirror = true;
      setRotation(Stock2, 0F, 0F, 0F);
      Stock3 = new ModelRenderer(this, 32, 0);
      Stock3.addBox(-1F, 0.2F, 17F, 2, 7, 5);
      Stock3.setRotationPoint(0F, 0F, 2F);
      Stock3.setTextureSize(64, 32);
      Stock3.mirror = true;
      setRotation(Stock3, 0F, 0F, 0F);
      Trigger = new ModelRenderer(this, 0, 0);
      Trigger.addBox(-0.5F, 3F, 9F, 1, 2, 1);
      Trigger.setRotationPoint(0F, 0F, 0F);
      Trigger.setTextureSize(64, 32);
      Trigger.mirror = true;
      setRotation(Trigger, -0.2792527F, 0F, 0F);
      SightMain = new ModelRenderer(this, 56, 0);
      SightMain.addBox(-0.5F, -1.6F, -16F, 1, 3, 1);
      SightMain.setRotationPoint(0F, 0F, 0F);
      SightMain.setTextureSize(64, 32);
      SightMain.mirror = true;
      setRotation(SightMain, 0F, 0F, 0F);
      Sight1 = new ModelRenderer(this, 56, 0);
      Sight1.addBox(-0.5F, -1F, -15F, 1, 1, 1);
      Sight1.setRotationPoint(0F, 0F, 0F);
      Sight1.setTextureSize(64, 32);
      Sight1.mirror = true;
      setRotation(Sight1, 0F, 0F, 0F);
      Sight2 = new ModelRenderer(this, 56, 0);
      Sight2.addBox(-0.5F, -0.4F, -14F, 1, 1, 1);
      Sight2.setRotationPoint(0F, 0F, 0F);
      Sight2.setTextureSize(64, 32);
      Sight2.mirror = true;
      setRotation(Sight2, 0F, 0F, 0F);
      Barrel = new ModelRenderer(this, 1, 9);
      Barrel.addBox(-1F, 1.2F, -24F, 2, 2, 13);
      Barrel.setRotationPoint(0F, 0F, 0F);
      Barrel.setTextureSize(64, 32);
      Barrel.mirror = true;
      setRotation(Barrel, 0F, 0F, 0F);
      Sight3 = new ModelRenderer(this, 56, 0);
      Sight3.addBox(-0.5F, 0.2F, -13F, 1, 1, 1);
      Sight3.setRotationPoint(0F, 0F, 0F);
      Sight3.setTextureSize(64, 32);
      Sight3.mirror = true;
      setRotation(Sight3, 0F, 0F, 0F);
      parts = new ModelRenderer[]{Body, TriggerGrip, Grip, ClipInsert, Stock1, Stock2, Stock3, Trigger, SightMain, Sight1, Sight2, Sight3, Barrel};
  }
  
  public void render(Entity entity, float f5)
	{
		for(ModelRenderer model : parts)
		{
			model.renderWithRotation(f5);
		}

	}
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    //super.render(entity, f, f1, f2, f3, f4, f5);
    //setRotationAngles(f, f1, f2, f3, f4, f5);
    Body.render(f5);
    TriggerGrip.render(f5);
    Grip.render(f5);
    ClipInsert.render(f5);
    Stock1.render(f5);
    Stock2.render(f5);
    Stock3.render(f5);
    Trigger.render(f5);
    SightMain.render(f5);
    Sight1.render(f5);
    Sight2.render(f5);
    Barrel.render(f5);
    Sight3.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, null);
  }

}